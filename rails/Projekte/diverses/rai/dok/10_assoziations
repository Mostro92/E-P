Verknüpfung von Tabellen:
Tabellen können über eine Verknüpfung von "Primary-Key" ( events-Tabelle ) zum "Foreign-Key" ( registrations-Tabelle:: event_id ) erstellt werden.

!!! rails generate resource registration name:string email:string how_heard:string event:references !!!

Vorraussetzungen::
	a. Foreign-Key muss in der abhängigen Tabelle vorhanden sein
	b. models/event.rb
		has_many :registrations
	c. models/registration.rb
		belongs_to :event

Wenn es diese Verknüpfung gibt, bildet Rails die zusätzlichen Methoden::
	r = Registration.first
	e = Event.find(r.event_id)
	r.event 					# zeigt den Event zur Registration
	e.registrations 	# zeigt die Registrierungen des Event an

M zu N Beziehungen.
Es ist möglich in Rails eine Verbindung zwischen zwei Tabellen herzustellen, die nicht mit einem Foreign-Key verbunden sind. Dazu ist allerdings eine Zwishcentabelle nötig.
Beispiel:
Die Tabelle events ist mit der Tabelle users über die Tabelle likes verknüpft.
class Event < ActiveRecord::Base	
	has_many :likes , dependent: :destroy
	has_many :likers , through: :likes , source: :user

class User < ActiveRecord::Base	
	has_many	:likes , dependent: :destroy
  has_many	:liked_events ,	through: :likes ,	source: :event

 class Like < ActiveRecord::Base
  belongs_to :event
  belongs_to :user

# Zwischen der Tabelle likes und der Tabelle events gibt es eine n : 1 Beziehung; d.h. die Tabelle likes enthält eine event_id, die auf einen Datensatz der Tabelle events verweist.
# Da es eine ebensolchen Verknüpfung zwischen der Tabelle likes und users gibt, ist es möglich die Tabellen users und events über (through) die Tabelle likes zu verbinden.
# Es ist möglich einer Beziehung einen Bezeichnung zu geben, die nicht dem Tabellennamen entspricht. Dann ist es jedoch notwendig mit source: anzugeben, auf welche Tabelle sich die Beziehung bezieht.