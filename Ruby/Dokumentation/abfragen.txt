if -Anweisungen
Die Überprüfung einer oder mehrerer Bedingungen findet in if-Blöcken statt.
Müssen mehrere Bedingungen überprüft werden, dann findet eine Verknüpfung mit dem
Und-operator statt:
	if type.is_a(String) && typ.size > 2
	Es müsssen beide bedingungen true sein, damit die Anweisungen in dem Block ausgeführt
	werden
Muss von mehreren Bedingungen eine zutreffen ist die Verwendungen des Oder-operators sinnvoll:
	if bedingung1 || bedingung2
	Wenn einer der Bedingungen zutrifft werden die Anweisungen im Block ausgeführt

if -elsif - else -end Konstrukt:
	def typ=(typ)
		if !typ.is_a?(String)
			puts "war kein string"
			
		elsif typ.size < 3
			puts "String zu kurz"
		else
			@typ = typ.capitalize
		end
	end

Kurzform der if-Anweisung
	def ps=(ps)
		@ps = ps if ps > 0
	end

	Steht am Ende einer Anweisung (in der gleichen Zeile) eine if-Bedingung, dann wird die
	vorgehende Anweisung (z.B.: Zuordnung eines Wertes) nur ausgeführt, wenn die Bedingung true ist.	

Ternärer Operator:
	Es gibt die möglichkeit einen if-else-block in einer Zeile auszuführen:
	puts car.typ.empty? ? "Kein Wert" : car.typ

	Die Anweisung puts, also erzeuge eine ausgabe, bekommt den Wert 'Kein Wert' falls die Bedingung 'car.typ.empty?' leere ist; bzw. den aktuellen Objekt-Wert für 'typ' falls dieser gefüllt ist.

	Das Fragezeichen ist ein Operator der die linksstehende Bedingung von den auszuführenden Anweisungen trennt.
	Der Doppelpunkt fungiert als Kurzform von 'else'